/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Enterprise as PrismaEnterprise } from "@prisma/client";

export class EnterpriseServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.EnterpriseCountArgs, "select">
  ): Promise<number> {
    return this.prisma.enterprise.count(args);
  }

  async enterprises(
    args: Prisma.EnterpriseFindManyArgs
  ): Promise<PrismaEnterprise[]> {
    return this.prisma.enterprise.findMany(args);
  }
  async enterprise(
    args: Prisma.EnterpriseFindUniqueArgs
  ): Promise<PrismaEnterprise | null> {
    return this.prisma.enterprise.findUnique(args);
  }
  async createEnterprise(
    args: Prisma.EnterpriseCreateArgs
  ): Promise<PrismaEnterprise> {
    return this.prisma.enterprise.create(args);
  }
  async updateEnterprise(
    args: Prisma.EnterpriseUpdateArgs
  ): Promise<PrismaEnterprise> {
    return this.prisma.enterprise.update(args);
  }
  async deleteEnterprise(
    args: Prisma.EnterpriseDeleteArgs
  ): Promise<PrismaEnterprise> {
    return this.prisma.enterprise.delete(args);
  }
}
